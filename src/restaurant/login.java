/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * login.java
 *
 * Created on Mar 2, 2010, 2:50:05 AM
 */

package restaurant;
import java.sql.*;
import java.security.*;
import org.jdesktop.application.*;
import javax.swing.*;
import java.security.*;
import java.math.*;
/**
 *
 * @author l
 */
public class login extends javax.swing.JPanel {

    /** Creates new form login */
    static String currentPosition = "";
    static String currentUser = "";

    public login() {
        initComponents();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginLabel = new javax.swing.JLabel();
        userNameTextField = new javax.swing.JTextField();
        userNameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        clearButton = new javax.swing.JButton();
        loginButton = new javax.swing.JButton();
        errorLable = new javax.swing.JLabel();
        errorLabel = new javax.swing.JLabel();

        setName("Form"); // NOI18N

        loginLabel.setFont(loginLabel.getFont().deriveFont(loginLabel.getFont().getSize()+15f));
        loginLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(restaurant.RestaurantApp.class).getContext().getResourceMap(login.class);
        loginLabel.setText(resourceMap.getString("loginLabel.text")); // NOI18N
        loginLabel.setName("loginLabel"); // NOI18N

        userNameTextField.setName("userNameTextField"); // NOI18N

        userNameLabel.setFont(userNameLabel.getFont().deriveFont(userNameLabel.getFont().getSize()+3f));
        userNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        userNameLabel.setText(resourceMap.getString("userNameLabel.text")); // NOI18N
        userNameLabel.setName("userNameLabel"); // NOI18N

        passwordLabel.setFont(passwordLabel.getFont().deriveFont(passwordLabel.getFont().getSize()+3f));
        passwordLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        passwordLabel.setText(resourceMap.getString("passwordLabel.text")); // NOI18N
        passwordLabel.setName("passwordLabel"); // NOI18N

        passwordField.setName("passwordField"); // NOI18N

        clearButton.setText(resourceMap.getString("clearButton.text")); // NOI18N
        clearButton.setName("clearButton"); // NOI18N
        clearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearButtonMouseClicked(evt);
            }
        });
        clearButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                clearButtonMouseDragged(evt);
            }
        });

        loginButton.setText(resourceMap.getString("loginButton.text")); // NOI18N
        loginButton.setName("loginButton"); // NOI18N
        loginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginButtonMouseClicked(evt);
            }
        });
        loginButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                loginButtonMouseDragged(evt);
            }
        });

        errorLable.setFont(errorLable.getFont());
        errorLable.setName("errorLable"); // NOI18N

        errorLabel.setForeground(resourceMap.getColor("errorLabel.foreground")); // NOI18N
        errorLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        errorLabel.setText(resourceMap.getString("errorLabel.text")); // NOI18N
        errorLabel.setName("errorLabel"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loginLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 1211, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(passwordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(userNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1106, Short.MAX_VALUE)
                            .addComponent(userNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 1106, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(errorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 1205, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(errorLable))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 811, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorLable, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(clearButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void clearButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseClicked
        // TODO add your handling code here:
        userNameTextField.setText("");
        passwordField.setText("");
        errorLabel.setText("");
}//GEN-LAST:event_clearButtonMouseClicked

    private void clearButtonMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseDragged
        // TODO add your handling code here:
        userNameTextField.setText("");
        passwordField.setText("");
        errorLabel.setText("");
}//GEN-LAST:event_clearButtonMouseDragged

    private void loginButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseClicked
        // TODO add your handling code here:
         login();
}//GEN-LAST:event_loginButtonMouseClicked

    private void loginButtonMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseDragged
        // TODO add your handling code here:
        login();

    }//GEN-LAST:event_loginButtonMouseDragged


    public void login()
    {

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(restaurant.RestaurantApp.class).getContext().getResourceMap(login.class);

         String user = userNameTextField.getText();
         String pass = String.copyValueOf(passwordField.getPassword());



         if(user.equalsIgnoreCase("") || pass.equalsIgnoreCase(""))
         {
            errorLabel.setText(resourceMap.getString(RestaurantView.currentLanguage + "emptyErrorMessages.text"));
         }
         else
         {
              try{
                MessageDigest m = MessageDigest.getInstance("MD5");
                m.update(pass.getBytes(),0,pass.length());
                pass = "" + new BigInteger(1,m.digest()).toString(16);
                System.out.println(pass);
                errorLabel.setText("");
                Statement auth = RestaurantView.databaseConnection.createStatement();
                ResultSet result =  auth.executeQuery("SELECT * FROM "  +
                resourceMap.getString("employeeTable") + " WHERE userName = '" + user + "' AND password = '" + pass + "'");

                String firstName = "";
                String lastName = "";
                String position = "";
                String password = "";
                String userName = "";

                while(result.next()){
                    //////if and else login
                userName = result.getString("userName");
                firstName = result.getString("firstName");
                lastName = result.getString("lastName");
                position = result.getString("ePosition");
                password = result.getString("password");
                }

                if(user.equalsIgnoreCase(userName) && pass.equalsIgnoreCase(password))
                {
                    String message = "Welcome " +position + " " + firstName + ", " + lastName;
//                    JOptionPane.showMessageDialog(null, message);
                    this.setVisible(false);
                    if(position.equalsIgnoreCase("Manager") || position.equalsIgnoreCase("Waiter") || position.equalsIgnoreCase("Chef"))
                    {
                       currentPosition = position;
                       currentUser = userName;
                    }
                    if(currentPosition.equalsIgnoreCase("Manager")){
                        RestaurantView.clearScreen();
                        this.getRootPane().setContentPane(RestaurantApp.managerP);
                        RestaurantApp.managerP.setVisible(true);
                    }else if(currentPosition.equalsIgnoreCase("Chef")){
                        RestaurantView.clearScreen();
                        this.getRootPane().setContentPane(RestaurantApp.chefP);
                        RestaurantApp.managerP.setVisible(true);
                    }else if(currentPosition.equalsIgnoreCase("Waiter")){
                        RestaurantView.clearScreen();
                        this.getRootPane().setContentPane(RestaurantApp.waiterP);
                        RestaurantApp.managerP.setVisible(true);
                    }else
                        System.out.println("No Such Position");

                }
                else
                {
                    errorLabel.setText(resourceMap.getString(RestaurantView.currentLanguage + "userNotFound.text"));
                }
                }catch(SQLException sqle)
                {
                    System.out.println(sqle );
                }
              catch(NoSuchAlgorithmException noae)
              {
                  System.out.println(noae);
              }
         }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton clearButton;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel errorLable;
    public static javax.swing.JButton loginButton;
    public static javax.swing.JLabel loginLabel;
    public static javax.swing.JPasswordField passwordField;
    public static javax.swing.JLabel passwordLabel;
    public static javax.swing.JLabel userNameLabel;
    public static javax.swing.JTextField userNameTextField;
    // End of variables declaration//GEN-END:variables

}
