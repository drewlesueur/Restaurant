

/*
 * CustomerPanel.java
 *
 * Created on Mar 23, 2010, 3:48:17 AM
 */

package restaurant;

//import javax.swing.DefaultListModel;
//import java.lang.Object;
import javax.swing.*;

/**
 *
 * Anna's version
 */
public class customerPanel extends javax.swing.JPanel {
    
    //updateable lists for menuList and orderedItemList
    DefaultListModel list4menu = new DefaultListModel();
    DefaultListModel list4ordered = new DefaultListModel();

    public menuItem orderSelected;
    public orderedItem orderedItemSelected;
    public String extraSelected;
    public int orderCount = 0;

    //temp array for all menu items
    public menuItem[] menu;
    //temp array for all ordered items
    public orderedItem[] ordered;

    //images
    ImageIcon gray = new ImageIcon("greystar.png");
    ImageIcon gold = new ImageIcon("goldStar.png");

    //set up for test array
    public void setup(){
        menuItem temp= new menuItem("pic1",12,"Spaghetti","Al Dente noodles served with marinara sauce","maincourse",3);
        menu[0] = temp;
        temp = new menuItem("pic2",13,"steak","yummy beef","maincourse",2);
        menu[1] = temp;
        temp = new menuItem("pic3",14,"fries","potato strings deep fried","appetizer",1);
        menu[2]= temp;
        temp = new menuItem("pic4",15,"fruit","sweet fruit chunks","appetizer",2);
        menu[3]=temp;
        temp = new menuItem("pic5",16,"pie","sweet cherry pie","dessert",5);
        menu[4]=temp;
        temp = new menuItem("pic6",17,"ice cream","creamy vanilla ice cream","dessert",3);
        menu[5]=temp;


    }

    /** Creates new form CustomerPanel */
    public customerPanel() {
        initComponents();
//        setup();  // remove this after testing
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        orderMenuFrame = new javax.swing.JPanel();
        menuLabel = new javax.swing.JLabel();
        orderItemButton = new javax.swing.JButton();
        instructions1 = new javax.swing.JLabel();
        instruction3 = new javax.swing.JLabel();
        revertSortButton = new javax.swing.JButton();
        appetizerSortButton = new javax.swing.JButton();
        mainSortButton = new javax.swing.JButton();
        ratingSortButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        menuList = new javax.swing.JList();
        instructions2 = new javax.swing.JLabel();
        extraComboBox = new javax.swing.JComboBox();
        dessertSortButton = new javax.swing.JButton();
        tableNum = new javax.swing.JLabel();
        numLabel = new javax.swing.JLabel();
        orderedItemPanel = new javax.swing.JPanel();
        orderedItemslabel = new javax.swing.JLabel();
        assistButton = new javax.swing.JButton();
        orderedItemsPane = new javax.swing.JScrollPane();
        orderedItemList = new javax.swing.JList();
        assistAcknowledge = new javax.swing.JLabel();
        ratingInstructions = new javax.swing.JLabel();
        star1 = new javax.swing.JButton();
        star2 = new javax.swing.JButton();
        star3 = new javax.swing.JButton();
        star5 = new javax.swing.JButton();
        star4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jPopupMenu1.setName("jPopupMenu1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(restaurant.RestaurantApp.class).getContext().getResourceMap(customerPanel.class);
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N

        orderMenuFrame.setBackground(resourceMap.getColor("orderMenuFrame.background")); // NOI18N
        orderMenuFrame.setFont(resourceMap.getFont("orderMenuFrame.font")); // NOI18N
        orderMenuFrame.setName("orderMenuFrame"); // NOI18N

        menuLabel.setFont(resourceMap.getFont("menuLabel.font")); // NOI18N
        menuLabel.setText(resourceMap.getString("menuLabel.text")); // NOI18N
        menuLabel.setName("menuLabel"); // NOI18N

        orderItemButton.setText(resourceMap.getString("orderItemButton.text")); // NOI18N
        orderItemButton.setName("orderItemButton"); // NOI18N
        orderItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderItemButtonActionPerformed(evt);
            }
        });

        instructions1.setText(resourceMap.getString("instructions1.text")); // NOI18N
        instructions1.setName("instructions1"); // NOI18N

        instruction3.setText(resourceMap.getString("instruction3.text")); // NOI18N
        instruction3.setName("instruction3"); // NOI18N

        revertSortButton.setText(resourceMap.getString("revertSortButton.text")); // NOI18N
        revertSortButton.setName("revertSortButton"); // NOI18N
        revertSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revertSortButtonActionPerformed(evt);
            }
        });

        appetizerSortButton.setText(resourceMap.getString("appetizerSortButton.text")); // NOI18N
        appetizerSortButton.setName("appetizerSortButton"); // NOI18N
        appetizerSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appetizerSortButtonActionPerformed(evt);
            }
        });

        mainSortButton.setText(resourceMap.getString("mainSortButton.text")); // NOI18N
        mainSortButton.setName("mainSortButton"); // NOI18N
        mainSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainSortButtonActionPerformed(evt);
            }
        });

        ratingSortButton.setText(resourceMap.getString("ratingSortButton.text")); // NOI18N
        ratingSortButton.setName("ratingSortButton"); // NOI18N
        ratingSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ratingSortButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        menuList.setModel(list4menu);
        menuList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        menuList.setName("menuList"); // NOI18N
        jScrollPane1.setViewportView(menuList);

        instructions2.setText(resourceMap.getString("instructions2.text")); // NOI18N
        instructions2.setName("instructions2"); // NOI18N

        extraComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No change", "More Salt", "Less Salt", "More Sugar", "Less Sugar" }));
        extraComboBox.setName("extraComboBox"); // NOI18N

        dessertSortButton.setText(resourceMap.getString("dessertSortButton.text")); // NOI18N
        dessertSortButton.setName("dessertSortButton"); // NOI18N
        dessertSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dessertSortButtonActionPerformed(evt);
            }
        });

        tableNum.setText(resourceMap.getString("tableNum.text")); // NOI18N
        tableNum.setName("tableNum"); // NOI18N

        numLabel.setText(resourceMap.getString("numLabel.text")); // NOI18N
        numLabel.setName("numLabel"); // NOI18N

        javax.swing.GroupLayout orderMenuFrameLayout = new javax.swing.GroupLayout(orderMenuFrame);
        orderMenuFrame.setLayout(orderMenuFrameLayout);
        orderMenuFrameLayout.setHorizontalGroup(
            orderMenuFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderMenuFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(orderMenuFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(extraComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(orderItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(instruction3)
                    .addComponent(instructions2)
                    .addGroup(orderMenuFrameLayout.createSequentialGroup()
                        .addComponent(revertSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ratingSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mainSortButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(appetizerSortButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dessertSortButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(orderMenuFrameLayout.createSequentialGroup()
                        .addComponent(menuLabel)
                        .addGap(461, 461, 461)
                        .addComponent(tableNum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numLabel))
                    .addComponent(instructions1))
                .addGap(150, 150, 150))
        );
        orderMenuFrameLayout.setVerticalGroup(
            orderMenuFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderMenuFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(orderMenuFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuLabel)
                    .addGroup(orderMenuFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(numLabel)
                        .addComponent(tableNum)))
                .addGap(4, 4, 4)
                .addComponent(instructions1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(instructions2)
                .addGap(18, 18, 18)
                .addGroup(orderMenuFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(revertSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainSortButton, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(appetizerSortButton, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(dessertSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ratingSortButton, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(instruction3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(extraComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(orderItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );

        orderedItemPanel.setBackground(resourceMap.getColor("orderedItemPanel.background")); // NOI18N
        orderedItemPanel.setName("orderedItemPanel"); // NOI18N

        orderedItemslabel.setFont(resourceMap.getFont("orderedItemslabel.font")); // NOI18N
        orderedItemslabel.setText(resourceMap.getString("orderedItemslabel.text")); // NOI18N
        orderedItemslabel.setName("orderedItemslabel"); // NOI18N

        assistButton.setText(resourceMap.getString("assistButton.text")); // NOI18N
        assistButton.setName("assistButton"); // NOI18N
        assistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assistButtonActionPerformed(evt);
            }
        });

        orderedItemsPane.setName("orderedItemsPane"); // NOI18N

        orderedItemList.setModel(list4ordered);
        orderedItemList.setName("orderedItemList"); // NOI18N
        orderedItemsPane.setViewportView(orderedItemList);

        assistAcknowledge.setText(resourceMap.getString("assistAcknowledge.text")); // NOI18N
        assistAcknowledge.setName("assistAcknowledge"); // NOI18N

        ratingInstructions.setText(resourceMap.getString("ratingInstructions.text")); // NOI18N
        ratingInstructions.setName("ratingInstructions"); // NOI18N

        star1.setIcon(resourceMap.getIcon("star1.icon")); // NOI18N
        star1.setText(resourceMap.getString("star1.text")); // NOI18N
        star1.setName("star1"); // NOI18N
        star1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                star1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                star1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                star1MouseExited(evt);
            }
        });

        star2.setIcon(resourceMap.getIcon("greystar.icon")); // NOI18N
        star2.setText(resourceMap.getString("star2.text")); // NOI18N
        star2.setName("star2"); // NOI18N
        star2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                star2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                star2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                star2MouseExited(evt);
            }
        });

        star3.setIcon(resourceMap.getIcon("star3.icon")); // NOI18N
        star3.setName("star3"); // NOI18N
        star3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                star3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                star3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                star3MouseExited(evt);
            }
        });

        star5.setIcon(resourceMap.getIcon("star5.icon")); // NOI18N
        star5.setName("star5"); // NOI18N
        star5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                star5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                star5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                star5MouseExited(evt);
            }
        });

        star4.setIcon(resourceMap.getIcon("star4.icon")); // NOI18N
        star4.setName("star4"); // NOI18N
        star4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                star4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                star4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                star4MouseExited(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        javax.swing.GroupLayout orderedItemPanelLayout = new javax.swing.GroupLayout(orderedItemPanel);
        orderedItemPanel.setLayout(orderedItemPanelLayout);
        orderedItemPanelLayout.setHorizontalGroup(
            orderedItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderedItemPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(orderedItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orderedItemPanelLayout.createSequentialGroup()
                        .addComponent(assistButton, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(assistAcknowledge))
                    .addGroup(orderedItemPanelLayout.createSequentialGroup()
                        .addComponent(orderedItemsPane, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(orderedItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(star1)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(star2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(star3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(star4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(star5)))
                .addGap(106, 106, 106))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, orderedItemPanelLayout.createSequentialGroup()
                .addContainerGap(279, Short.MAX_VALUE)
                .addComponent(ratingInstructions)
                .addGap(193, 193, 193))
            .addGroup(orderedItemPanelLayout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addComponent(orderedItemslabel)
                .addContainerGap(354, Short.MAX_VALUE))
        );
        orderedItemPanelLayout.setVerticalGroup(
            orderedItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderedItemPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(orderedItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assistButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assistAcknowledge))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(orderedItemslabel)
                .addGap(16, 16, 16)
                .addComponent(ratingInstructions)
                .addGroup(orderedItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orderedItemPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(orderedItemsPane, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(orderedItemPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(orderedItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(star1)
                            .addComponent(star2)
                            .addComponent(star3)
                            .addComponent(star4)
                            .addComponent(star5))
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(orderMenuFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(orderedItemPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(orderedItemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(orderMenuFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void revertSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revertSortButtonActionPerformed
        // return entire list of menu items from array to menuList
        revertSort();

    }//GEN-LAST:event_revertSortButtonActionPerformed

    private void ratingSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ratingSortButtonActionPerformed
        // return list of menu items sorted by highest rating
        ratingSort();
    }//GEN-LAST:event_ratingSortButtonActionPerformed

    private void mainSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainSortButtonActionPerformed
        // return list of menu items that are main courses
        mainCourseSort();
    }//GEN-LAST:event_mainSortButtonActionPerformed

    private void appetizerSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appetizerSortButtonActionPerformed
        // return list of menu items that are appetizers
        appetizerSort();
    }//GEN-LAST:event_appetizerSortButtonActionPerformed

    private void dessertSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dessertSortButtonActionPerformed
        // return list of menu items are thare desserts
        dessertSort();
    }//GEN-LAST:event_dessertSortButtonActionPerformed

    private void orderItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderItemButtonActionPerformed
        // orders item and updates ordered item database and list
        orderItem();
    }//GEN-LAST:event_orderItemButtonActionPerformed

    private void assistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assistButtonActionPerformed
        // change status of table on database and display message
        assistAcknowledge.setVisible(true);
    }//GEN-LAST:event_assistButtonActionPerformed

    private void star1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star1MouseEntered
        // change icon with rollover

org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(restaurant.RestaurantApp.class).getContext().getResourceMap(customerPanel.class);
star1.setIcon(resourceMap.getIcon("starGold.icon"));


    }//GEN-LAST:event_star1MouseEntered

    private void star1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star1MouseClicked
        //enter star rating for selected item
        orderedItemSelected = (orderedItem)orderedItemList.getSelectedValue();
        if(orderedItemSelected.ratingAlreadySet() == false)
                orderedItemSelected.setRating(1);
        star1.setIcon(gold);
        //set all star icons to gray
        //***send ordered item to orderedItem database
    }//GEN-LAST:event_star1MouseClicked

    private void star2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star2MouseClicked
        // enter star rating for selected item
        orderedItemSelected = (orderedItem)orderedItemList.getSelectedValue();
        if(orderedItemSelected.ratingAlreadySet() == false)
                orderedItemSelected.setRating(2);
        //set all star icons to gray
        //***send ordered item to orderedItem database
    }//GEN-LAST:event_star2MouseClicked

    private void star3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star3MouseClicked
        // enter star rating for selected item
        orderedItemSelected = (orderedItem)orderedItemList.getSelectedValue();
        if(orderedItemSelected.ratingAlreadySet() == false)
                orderedItemSelected.setRating(3);
        //set all star icons to gray
        //***send ordered item to orderedItem database
    }//GEN-LAST:event_star3MouseClicked

    private void star4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star4MouseClicked
        // enter star rating for selected item
        orderedItemSelected = (orderedItem)orderedItemList.getSelectedValue();
        if(orderedItemSelected.ratingAlreadySet() == false)
                orderedItemSelected.setRating(4);
        //set all star icons to gray
        //***send ordered item to orderedItem database
    }//GEN-LAST:event_star4MouseClicked

    private void star5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star5MouseClicked
        // enter star rating for selected item
        orderedItemSelected = (orderedItem)orderedItemList.getSelectedValue();
        if(orderedItemSelected.ratingAlreadySet() == false)
                orderedItemSelected.setRating(5);
        //set all star icons to gray
        //***send ordered item to orderedItem database
    }//GEN-LAST:event_star5MouseClicked

    private void star1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star1MouseExited
        // TODO add your handling code here:
        clearStar();
    }//GEN-LAST:event_star1MouseExited

    private void star2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star2MouseEntered
        // TODO add your handling code here:
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(restaurant.RestaurantApp.class).getContext().getResourceMap(customerPanel.class);
        star1.setIcon(resourceMap.getIcon("starGold.icon"));
        star2.setIcon(resourceMap.getIcon("starGold.icon"));
    }//GEN-LAST:event_star2MouseEntered

    private void star2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star2MouseExited
        // TODO add your handling code here:
        clearStar();
    }//GEN-LAST:event_star2MouseExited

    private void star3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star3MouseExited
        // TODO add your handling code here:
        clearStar();
    }//GEN-LAST:event_star3MouseExited

    private void star4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star4MouseExited
        // TODO add your handling code here:
        clearStar();
    }//GEN-LAST:event_star4MouseExited

    private void star5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star5MouseExited
        // TODO add your handling code here:
        clearStar();
    }//GEN-LAST:event_star5MouseExited

    private void star3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star3MouseEntered
        // TODO add your handling code here:
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(restaurant.RestaurantApp.class).getContext().getResourceMap(customerPanel.class);
        star1.setIcon(resourceMap.getIcon("starGold.icon"));
        star2.setIcon(resourceMap.getIcon("starGold.icon"));
        star3.setIcon(resourceMap.getIcon("starGold.icon"));
    }//GEN-LAST:event_star3MouseEntered

    private void star4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star4MouseEntered
        // TODO add your handling code here:
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(restaurant.RestaurantApp.class).getContext().getResourceMap(customerPanel.class);
        star1.setIcon(resourceMap.getIcon("starGold.icon"));
        star2.setIcon(resourceMap.getIcon("starGold.icon"));
        star3.setIcon(resourceMap.getIcon("starGold.icon"));
        star4.setIcon(resourceMap.getIcon("starGold.icon"));
    }//GEN-LAST:event_star4MouseEntered

    private void star5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star5MouseEntered
        // TODO add your handling code here:
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(restaurant.RestaurantApp.class).getContext().getResourceMap(customerPanel.class);
        star1.setIcon(resourceMap.getIcon("starGold.icon"));
        star2.setIcon(resourceMap.getIcon("starGold.icon"));
        star3.setIcon(resourceMap.getIcon("starGold.icon"));
        star4.setIcon(resourceMap.getIcon("starGold.icon"));
        star5.setIcon(resourceMap.getIcon("starGold.icon"));
    }//GEN-LAST:event_star5MouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton appetizerSortButton;
    public static javax.swing.JLabel assistAcknowledge;
    public static javax.swing.JButton assistButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    public static javax.swing.JButton dessertSortButton;
    public static javax.swing.JComboBox extraComboBox;
    public static javax.swing.JLabel instruction3;
    public static javax.swing.JLabel instructions1;
    public static javax.swing.JLabel instructions2;
    public static javax.swing.JLabel jLabel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JButton mainSortButton;
    public static javax.swing.JLabel menuLabel;
    public static javax.swing.JList menuList;
    public static javax.swing.JLabel numLabel;
    public static javax.swing.JButton orderItemButton;
    public static javax.swing.JPanel orderMenuFrame;
    public static javax.swing.JList orderedItemList;
    public static javax.swing.JPanel orderedItemPanel;
    private javax.swing.JScrollPane orderedItemsPane;
    public static javax.swing.JLabel orderedItemslabel;
    public static javax.swing.JLabel ratingInstructions;
    public static javax.swing.JButton ratingSortButton;
    public static transient javax.swing.JButton revertSortButton;
    public static javax.swing.JButton star1;
    public static javax.swing.JButton star2;
    public static javax.swing.JButton star3;
    public static javax.swing.JButton star4;
    public static javax.swing.JButton star5;
    public static javax.swing.JLabel tableNum;
    // End of variables declaration//GEN-END:variables


    //my methods
    public static void clearStar()
    {
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(restaurant.RestaurantApp.class).getContext().getResourceMap(customerPanel.class);
        star1.setIcon(resourceMap.getIcon("starGray.icon"));
        star2.setIcon(resourceMap.getIcon("starGray.icon"));
        star3.setIcon(resourceMap.getIcon("starGray.icon"));
        star4.setIcon(resourceMap.getIcon("starGray.icon"));
        star5.setIcon(resourceMap.getIcon("starGray.icon"));
    }
    public void orderItem(){
        //get selected menu item from menuList
         orderSelected = (menuItem)menuList.getSelectedValue();
        //get selected item in extraComboBox
         extraSelected = (String)extraComboBox.getSelectedItem();
        //create orderedItem
         int temp1 = orderSelected.getMenuId();
         String temp2 = orderSelected.getName();
         orderedItem itemCount = new orderedItem(temp1,temp2,extraSelected);

         updateDatabase();

         //add ordered item to orderedItemList
         list4ordered.addElement(itemCount);
         //unselect ordered item
         menuList.clearSelection();
         //increase customer count
         orderCount++;
         //test
         System.out.println(itemCount.toString() + " ordered");
    }

    //lists all menu items in menuList
    public void revertSort(){
        //clear menuList
        list4menu.clear();
        //take all menu items from menu array and add to menuList
        for(int i=0;i<menu.length; i++){
            list4menu.addElement(menu[i]);
        }
        //***needs update for JList
    }

    //lists all appetizers in menuList
    public void appetizerSort(){
        //clear menuList
        list4menu.clear();
        String temp1 = "appetizer";
        for(int i=0;i<menu.length; i++){
            if(temp1.equals(menu[i].getType()))
                list4menu.addElement(menu[i]);
        }
        //***needs update for JList
    }

    //lists all main course in menuList
    public void mainCourseSort(){
        //clear menuList
        list4menu.clear();
        String temp1 = "maincourse";
        for(int i=0;i<menu.length;i++){
            if(temp1.equals(menu[i].getType()))
                list4menu.addElement(menu[i]);
        }
        //***needs update for JList
    }

    //lists all desserts in menuList
     public void dessertSort(){
        //clear menuList
        list4menu.clear();
        String temp1 = "dessert";
        for(int i=0;i<menu.length;i++){
            if(temp1.equals(menu[i].getType()))
                list4menu.addElement(menu[i]);
        }
        //***needs update for JList
    }

    //lists all menu items in order of rating
     public void ratingSort(){
         //clear menuList
         list4menu.clear();
         //set up temp menu array for sorting
         menuItem[] tempmenu = new menuItem[menu.length];
         for(int y=0;y<menu.length;y++){
             tempmenu[y]=menu[y];
         }
         //insertion sort
        for(int i=0;i<tempmenu.length;i++){
             int temp1 = i;
             menuItem temp2 = tempmenu[i];
             while((temp1>0)&&(tempmenu[temp1-1].getRating()< temp2.getRating())){
                 tempmenu[temp1]=tempmenu[temp1-1];
                 temp1--;
             }
             tempmenu[temp1]=temp2;
         }
         //add items to menuList
         for(int k=0;k<menu.length;k++){
             list4menu.addElement(tempmenu[k]);
         }
         //***needs update for JList
     }

     //create array of menuItems from database and set up functions
     public void setUpMenuItems(){
         assistAcknowledge.setVisible(false);
         /*needs query set up to pull information for base menu info
          * for loop through menu item id and calculateRating for each one
          */
         //this should also capture a table number from login


     }
     public int calculateRating(int[] rate){
         int[] input = rate;
         int sum =0;
         for(int i=0;i<input.length;i++){
             sum+=input[i];
         }
         return sum/input.length;
     }

     //update for onscreen menu
     public boolean updateDatabase(){
         // update orderedItem database
         return true;
     }

     public void setTableNum(int num){
         numLabel.setText(String.valueOf(num));
     }

     public void setPaymentOptions(){
         
     }
}


